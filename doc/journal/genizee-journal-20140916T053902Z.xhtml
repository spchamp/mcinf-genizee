<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>State of the Pick Axe &mdash; A Review of Current Develpoments in the Genizee Project</title>
	<link href="section.css" rel="stylesheet" type="text/css" />
	<link href="article.css" rel="stylesheet" type="text/css" />
</head>

<div class="article">

  <div class="metadata">
    <h1 class="title">State of the Pick Axe &mdash; A Review of Current Develpoments in the Genizee Project</h1>
    <div class="author">Sean Champ</div>
    <div class="pubdate">16 September, 2014</div>
    <div class="revision">Revision 1.1</div>
  </div><!-- .metadata -->
  
  <div class="content">

	<blockquote class="ednote endnote">
    <p><strong><u>Standing items</u>:</strong></p>
    
   	<ul>
    	<li>Define <strong><em>User options</em> framework </strong>for systems using ASDF</li>
        <li>Debine <em>binary <strong>bundling</strong></em><strong> framwork</strong> for systems using ASDF</li>
        <li><strong>KR demonstration</strong> &mdash; see also, <em><a href="genizee-journal-20140915T111844Z.xhtml">Towards a Set of Usage Examples for Garnet KR</a></em> &mdash; <strong>with or without graphical display</strong> in the X Windows System</li>
        <li>Resolve <strong>fonts issue</strong></li>
     </ul>
    </blockquote>

  	<h2>Garnet &ndash; Multiple Source Trees, One Platform</h2>
    
<h3>Official Source Repostories of the Garnet Lisp Project</h3>
    
    <p>The official <a href="http://sourceforge.net/p/garnetlisp/">Garnet Lisp project</a> at SourceForge.net publishes two distinct source code repositories:</p>
    
    <ul>
    	<li><abbr>SVN</abbr> Repository of Garnet Lisp Project (<a href="http://sourceforge.net/p/garnetlisp/svn/HEAD/tree/trunk/">Web View</a>)</li>
        <li><abbr>CVS</abbr> Repository of Garnet Lisp Project (<a href="http://garnetlisp.cvs.sourceforge.net/viewvc/garnetlisp/">Web view</a>) (<a href="http://sourceforge.net/p/garnetlisp/code/">Info</a>)</li>      
    </ul>
  
  	<p>Briefly reviewing the revision logs of the respective repositires, it appears that the <abbr>SVN</abbr> repository is the most up-to-date of the two parallel source code repositories, as published by the canonical <a href="http://sourceforge.net/p/garnetlisp/">Garnet Lisp project</a>. </p>
    
    <h3>Creating a <span class="productname">Git</span> Mirror from the Garnet Lisp <abbr class="productname">SVN</abbr> Repository</h3>
    
  	<p>The Garnet Lisp Project <abbr>SVN</abbr> repository has been mirrored in the <a href="https://github.com/MetaCommunity/garnet">Garnet fork</a> published by the MetaCommunity.info (MCi) Project. That mirror was begun, specifically in the <a href="https://github.com/MetaCommunity/garnet/tree/garnetlisp"><code><em>garnetlisp</em></code> branch</a>  (at <a href="https://github.com/MetaCommunity/garnet/commit/2a84f024e43f5e167e211d6881821e5b6baca853">revision mark</a>). That <em>branch</em> was created originally with the <span class="command">git svn</span> command, before being added to the <a href="https://github.com/MetaCommunity/garnet">Garnet Fork</a> published by the MCi Project.</p>

<blockquote class="snippet">
<p class="annotation">The following <em class="glossterm">shell</em> <em class="glossterm">commands</em> create an individual <em class="glossterm">source tree</em>, in such a manner as that the <em class="glossterm">source tree</em> would reside, on the local filesystem, in parallel to any existing <em class="glossterm">source tree</em> on the local filesystem. As an advisory comment: It may be possible to use <code class="command">git svn</code> to append a <em class="glossterm">branch</em> immediately to an existing <code class="command">git</code> <em class="glossterm">source tree</em>. However, in order to ensure a clean <em>bare root</em> for the <code class="revbranch">garnetlisp</code> <em class="glossterm">branch</em> subsequently created in these <em class="glossterm">shell</em> <em class="glossterm">commands, </em> a seperate <em class="glossterm">source tree</em> is created, before being appended to the second <em class="glossterm">remote</em> <em class="glossterm">repository</em></p>

<pre><strong>cd</strong> ~/workspace/ws-genizee

## Create Git repository at
##
##    ~/workspace/ws-genizee/garnetlisp
##
## from 
##
##    <u>svn://svn.code.sf.net/p/garnetlisp/svn/</u>
##
## observing that the garnetlisp SVN tree layout
## is a standard layout, with 'tags', 'branches', 
## and 'trunk' folders
## 
## The local Git source tree is created under
## the remote prefix 'origin'
##
<strong>git svn</strong> -s --prefix=<strong><em>origin/</em></strong> clone \
    <u>svn://svn.code.sf.net/p/garnetlisp/svn/</u> garnetlisp 

<strong>cd</strong> garnetlisp

## Create branch named <em>garnetlisp</em>
## beginning from current local <em>master</em> branch
## in repository at ~/workspace/ws-genizee/garnetlisp
## then update the source tree to use that branch
##
<strong>git branch</strong> <em>garnetlisp</em> 
<strong>git checkout</strong> <em>garnetlisp</em>

## push the local <em>garnetlisp</em> branch
## to the (new) <em>garnetlisp</em> branch under 
## the existing MetaCommunity Garnet repository
##
<strong>git remote</strong> add <em><strong>mcigarnet</strong></em> --tags -t <em>garnetlisp</em> \
	<u>git@github.com:MetaCommunity/garnet.git</u>
<strong>git push</strong> <em><strong>mcigarnet</strong></em> <em>garnetlisp</em></pre>
</blockquote>

<p>The <code class="revbranch">garnet<span>lisp</span></code> <em class="glossterm">branch</em> &mdash; as thusly created in the <abbr>MCi</abbr> <span class="productname">Garnet</span> <em class="glossterm">repository</em> &mdash; thus has a <em>"bare root"</em> in the <em class="glossterm">repository</em> &mdash; a <em class="glossterm">branch</em> beginning not from any existing <em class="glossterm">branch</em> in the <em class="glossterm">repository</em>. The same"Bare root" condition, perhaps, may be well addressed in subsequent endeavors. </p>

<h3>Creating a <span class="productname">Git</span> Mirror from the Garnet Lisp <abbr class="productname">CVS</abbr> Repository</h3>

<blockquote class="snippet">
<pre><strong class="command">mkdir</strong> -p cvsgarnetlisp &amp;&amp; 
    cd cvsgarnetlisp

<strong class="command">git cvsimport</strong> \
    -a -d :pserver:anonymous@garnetlisp.cvs.sourceforge.net:/cvsroot/garnetlisp \
    garnet
    
## ... wait for the import to complete ...

<strong class="command">git branch</strong> <em>cvsgarnetlisp</em> 
<strong class="command">git checkout</strong> <em>cvsgarnetlisp</em>

<strong>git remote</strong> add <em><strong>mcigarnet</strong></em> --tags -t <em>garnetlisp</em> \
	<u>git@github.com:MetaCommunity/garnet.git</u>
<strong>git push</strong> <em><strong>mcigarnet</strong></em> <em>cvsgarnetlisp</em></pre>
</pre>
    


</blockquote>

<blockquote>
  <p>Following a review of the <em class="glossterm">source code</em> then under the <code class="revbranch">cvs<span>garnet</span>lisp</code> <em class="glossterm">branch</em>&mdash; presuming that the <em class="glossterm">revision history </em>of that <em class="glossterm">branch</em> may serve to indicate whether that <em class="glossterm">branch</em> does or does not reprsent the <em>revision tree origin</em> of any of the other <em class="glossterm">branches </em> in the <em class="glossterm">repository</em> &mdash; then the <code><strong>git rebase</strong></code> command may be applied, so as to update the <em class="glossterm">revision tree </em>of any of the other <em class="glossterm">branch</em>es then existing in the <em class="glossterm">source repository</em> of the the <code class="revremote">mcigarnet</code> <em class="glossterm">remote</em>, insofar as to indicate where was the <em>revision tree origin</em> of each respective <em class="glossterm">branch</em>. Ideally, the entire <code class="revremote">mcigarnet</code> <em class="glossterm">remote</em> would contain a single, consistent revision tree, with no <em>&quot;bare root&quot;</em> conditions. </p>
</blockquote>
<!-- 
<ul>
<li><code class="revbranch">mmgarnet</code> <em class="glossterm">branch</em>, originally <em class="glossterm">forked</em> from <code><a href="https://github.com/mmontone/garnet">mmontone/garnet</a></code></li>
<li><code class="revbranch">garnetlisp</code> <em class="glossterm">branch</em>, originally from the official Garnet Lisp project's own <a href="http://sourceforge.net/p/garnetlisp/svn/HEAD/tree/trunk/"><abbr>SVN</abbr> repository</a></li>
<li><code class="revbranch">master</code> <em class="glossterm">branch</em>, derived originally from <code>mmontone/garnet</code></li>
</ul>
-->

<h3>Original Source Root of the MetaCommunity Garnet Repository</h3>

<p>The <a href="https://github.com/MetaCommunity/garnet/tree/mmgarnet"><code class="revbranch">mmgarnet</code> branch</a> of the MetaCommunity Garnet fork (at <a href="https://github.com/MetaCommunity/garnet/commit/1652af38f76b1c4efb19bc31cfbae9197817a786">revision mark</a>) was derived   originally from the Garnet source code <em>fork</em> created by Mariano Montone. </p>
<p>The <a href="https://github.com/MetaCommunity/garnet/tree/mmgarnet"><code class="revbranch">mmgarnet</code> branch</a> was previously the <a href="https://github.com/mmontone/garnet/tree/master"><code class="revbranch">master</code> branch</a> of the MetaCommunity Garnet repository. The latter repository was created, originally, using the web-based resource management interface at Github. Thus,  the <code><a href="https://github.com/mmontone/garnet">mmontone/garnet</a></code> source repository was <em>forked, </em>creating a repository, <code><a href="https://github.com/MetaCommunity/garnet">MetaCommunity/garnet</a></code> with its  <a href="https://github.com/MetaCommunity/garnet/tree/master"><code class="revbranch">master</code>  branch</a> then derived originally from the corresponding <a href="https://github.com/mmontone/garnet/tree/master"><code class="revbranch">master</code> branch</a> of the <code><a href="https://github.com/mmontone/garnet">mmontone/garnet</a></code> repository. Subsequently, the <em><a href="https://github.com/MetaCommunity/garnet/tree/master"><code>master</code></a></em><a href="https://github.com/MetaCommunity/garnet/tree/master"> branch</a> created from the initial <em>fork</em> was renamed to <code class="revbranch">mmgarnet</code>, and a new <code class="revbranch">master</code> branch was created, that deriving from the <code class="revbranch">garnetlisp</code> <em class="glossterm">branch</em>.</p>
<p>Towards developing a single revision history for Garnet, a brief, superficial review was performed of the respective soruce trees, so as to determine a small sample of differences between the two respective <em>upstream repositories</em>, in revisions at and proceeding towards each respective <em>revision mark. </em> The <a href="http://git-cola.github.io/screenshots.html">git-cola</a></span> application was substantially helpful, in making this review. Between the 'trunk' source tree of the official Garnet <abbr>SVN</abbr> repository and the 'master' source tree of the <code><a href="https://github.com/mmontone/garnet">mmontone/garnet</a></code> repository, it would seem that the two respective upstream source trees have undergone, largely, a seperate evolution</p>
<h3>A Repository Model in Four Branches Integrating Three Upstream Repositories</h3>
<blockquote class="endnote">
  <p>An additional <em class="glossterm">branch</em> has been created, recently, in an effort to merge the initial <em class="revbranch">revision</em> of the SVN-origin <code class="revbranch">garnetlisp</code> <em class="glossterm">branch</em> onto the final <em class="revbranch">revision</em> of the CVS-origin <code class="revbranch">cvsgarnetlisp</code> <em class="glossterm">branch, </em>namely to the creation of the <a href="https://github.com/MetaCommunity/garnet/tree/mergetree"><code class="revbranch">mergetree</code></a> <em class="glossterm">branch</em>. </p>
  <p>Pending a thorough review of the source code of the resulting <em>merge</em>, development has been proceeding on the <code class="revbranch">garnetlisp</code> <em class="glossterm">branch, </em>in as the latter representing a &quot;Latest known good&quot; branch of the original Garnet source tree.</p>
</blockquote>

<p>Proceeding on the integration of the official Garnet <abbr>CVS</abbr> repository, four distinct branches were created:</p>
<ul>
  <li><code class="revbranch">garnetlisp</code> <em class="glossterm">branch</em>, <em class="glossterm"></em>with revision tree source: The official Garnet Lisp project's own <a href="http://sourceforge.net/p/garnetlisp/svn/HEAD/tree/trunk/"><abbr>SVN</abbr> repository</a></li>
  <li><code class="revbranch">cvsgarnetlisp</code> <em class="glossterm">branch</em>, <em class="glossterm"></em>with revision tree source: The official Garnet Lisp project's own <abbrev>CVS</abbrev> repository  (<a href="garnetlisp.cvs.sourceforge.net/viewvc/garnetlisp/">Web view</a>) (<a href="http://sourceforge.net/p/garnetlisp/code/">Info</a>)</li>
  <li><code class="revbranch">mmgarnet</code> <em class="glossterm">branch, </em>with revision tree source: <code><a href="https://github.com/mmontone/garnet">mmontone/garnet</a></code>, mirroring the <code class="revbranch">cvsgarnetlisp</code> <em class="glossterm">branch</em></li>
  <li><code class="revbranch">master</code> <em class="glossterm">branch</em>, derived originally from <code class="revbranch">garnetlisp</code></li>
  </ul>
This article will address the <code class="revbranch">garnetlisp</code> <em class="glossterm"></em> branch of the MCi Garnet source repository, as denoted.
<h2>Towards Developing a Development Model for Garnet Development</h2>
    
    <p><em>A concept in sidebar: IDE Metamodel, or"Meta-IDE" Model</em></p>
    
    <h3>Platform Requirements</h3>
    
    <h4>X Window System</h4>
    
    <h5>X on Microsoft Windows</h5>
    
    <div>Alternatives, one or more of each:</div>
    <ul>
    <li>X Window System Server and X Windows clients running on same PC
      <ul>
        <li> X Windows Servers for Microsoft Windows platforms: Xming, Cygwin, other</li>
      </ul>
    </li>
    <li>VirtualBox 
      <ul>
        <li>Role: Platform for Development with CLX
          <ul>
            <li>Interaction via Virtualbox' virtual desktop layer</li>
            <li>Interaction via RDP</li>
            <li> Interaction via a formal <em>Desktop remoting</em> protocol 
              <ul>
                <li> X Window System, with clients running directly on "guest OS" displayed with X windows server "directly on host OS". </li>
              </ul>
            </li>
          </ul>
        </li>
      </ul>
    </li>
    </ul>
    
    <h4>ANSI Common Lisp</h4>
    
    <div>Alternatives: Numerous</div>
    
    <h3>Sidebar: Common Lisp Implementations Specifically Supported in Garnet (garnetlisp branch)</h3>
    <ul>
    <li>SBCL</li>
    <li>CCL</li>
    <li>CMUCL</li>
    <li>ACL</li>
    </ul>
    <p>Note: mmgarnet branch does not explicitly support CCL, does explicitly support GNU CLISP</p>
<h4>Additional Libraries</h4>
<h5>CLX</h5>
    
    <p>Availability of CLX:</p>
    <ul>
    <li>Portable CLX (originally developed by: TBD)</li>
    <li>"Third-party forks"</li>
    <li>CLX edtions provided with individual Common Lisp distributions</li>
    </ul>
    
    <h6>Note: CLX and Stand-Alone Lisp Images</h6>
    
    <p>(Concerns TBD. google: clx save-lisp)    </p>
    <h5>Truetype Dependencies</h5>
<p>The following Common Lisp software systems may be compiled and loaded via ASDF's integration with <code>CL:REQUIRE</code>, on supoprting implementations</p>
    <ul>
      <li>ZBP-TTF
        <ul>
          <li>Availability:<ul>
            <li><a href="http://www.xach.com/lisp/zpb-ttf/">info</a></li>
            <li><a href="https://github.com/xach/zpb-ttf">at github</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li>CL-Vectors
        <ul>
          <li>Availability
            <ul>
              <li><a href="http://projects.tuxee.net/cl-vectors/">info</a></li>
              <li><a href="https://github.com/fjolliton/cl-vectors">at github</a></li>
            </ul>
          </li>
          <li>Same source code repository also provides:
            <ul>
              <li>CL-Paths-TTF</li>
              <li>CL-AA</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>CL-FAD
        <ul>
          <li><em>Portable pathname library for Common Lisp</em></li>
          <li>Availability
            <ul>
              <li><a href="http://weitz.de/cl-fad/">info</a></li>
              <li><a href="https://github.com/edicl/cl-fad">at github</a></li>
            </ul>
          </li>
        </ul>
      </li>
      <li>CL-Store
        <ul>
          <li>Keywords: Serialization</li>
          <li>Availability
            <ul>
              <li><a href="http://common-lisp.net/project/cl-store/">info</a></li>
              <li><a href="https://github.com/skypher/cl-store">at github</a>.</li>
            </ul>
          </li>
        </ul>
      </li>
      <li>Trivial-Features
        <ul>
          <li>Availability
            <ul>
              <li><a href="http://www.cliki.net/trivial-features">info (Unoff. homepage at CLiki)</a></li>
              <li><a href="https://github.com/trivial-features/trivial-features">at github</a></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    
    
    <h2>Building Garnet</h2>
    
    <p>As it's said of PERL, <em>"<abbr>TMTOWDI</abbr>"</em></p>
    
    <p>NOTE: Affects of <code>{PACKAGE??}::Garnet-Garnet-Debug</code> variable during compile time (TBD) (see also: Original build.lisp)
    </p>
    <p>Convenient Alternatives</p>
    <ul>
   	  <li>garnetlisp branch: <code>build-garnet</code>
        <ul>
        	<li>Compiles and loads Garnet,  then (...) exits. Optionally, then loads Garnet again and generates a Lisp image, using opal:make-image
        	  <ul>
        	    <li>TO DO: Check &quot;Existing work&quot; and define a system for managing system builds with ASDF
        	      <ul>
        	        <li>Systems to load</li>
        	        <li>...</li>
        	        <li>Pre-exit functions</li>
        	        <li>... </li>
        	        <li>Managing lisp images (registration w/i a lisp manager thing, etc) (integration of a lisp manager w/ IDE.) (xref to common-lisp-manager, historic) (which GUI to use in IDE?)</li>
      	          </ul>
        	    </li>
       	      </ul>
        	</li>
       	  <li>(Current verison) "Batch command line" Supported exclusively for Lisp implementations SBCL, CMUCL, CCL, ACL</li>
       	  <li>build-garnet loads files:
       	    <ul>
       	      <li>original <em>garnet-prepare-compile.lisp</em>
(all in package cl-user)
  <ul>
       	          <li>which defines (defvar) various compile-foo-p variables, and</li>
       	          <li>defines (defvar) various load-&lt;foo&gt;-p variables, and</li>
       	          <li>defines (defparameter) various load-&lt;foo&gt;-p-copy parameters
       	            <ul>
       	              <li>used in garnet-compiler.lisp for a sort of pre-check to ensure garnet-prepare-compile is loaded before garnet-compiler</li>
   	                </ul>
       	          </li>
       	          <li>defines (defvar) launch-process-p as NIL, lastly</li>
       	          <li>defines (defvar) *Garnet-Going-To-Compile* as T</li>
   	            </ul>
       	      </li>
       	      <li>original <em>garnet-loader.lisp</em>, which...
       	        <ul>
       	          <li>defines a number of *feature* features (TO DO: Carry all of these over into the ASDF loader)
       	            <ul>
       	              <li>:GARNET</li>
       	              <li>:GARNET-V3</li>
       	              <li>:GARNET-V3.3</li>
       	              <li>and if multiprocessing is known to be available, :GARNET-PROCESSES</li>
       	              <li>and if Garnet-Garnet-Debug =&gt; T, adds :garnet-debug to *features* </li>
       	            </ul>
       	          </li>
       	          <li>is also where most of Garnet's DEFPACKAGE forms are initially evaluated
       	            <ul>
       	              <li>TO DO: Move the defpackage forms into nww files their respective source directories, namely towards building with ASDF</li>
   	                </ul>
       	          </li>
       	          <li> if *garnet-compile-debug-mode* =&gt; T =&gt; &quot;more debuggable&quot; Garnet
       	            <ul>
       	              <li>Affects Garnet's setting of compiler optimizations during compile time</li>
       	              <li>TO DO: Grep the source code for that variable, also document its uses, etc</li></ul></li>
       	          <li> *garnet-compile-debug-settings*. NOTE</li>
       	          <li>*garnet-compile-production-settings*. NOTE</li>
       	          <li>*default-garnet-proclaim*
       	            <ul>
       	              <li>Inherits one of the previous two -settings* values, depending on the value of *garnet-compile-debug-mode*</li>
       	              <li>used in 'prolaim' call within <em>garnet-loader.lisp</em></li>
   	                </ul>
       	          </li>
       	          <li>ensures that CLX will be loaded (*load-clx-p*)</li>
       	          <li>... libraries set to be loaded (DEFVAR LOAD-&lt;FOO&gt;-P redundantly) <strong><em>unless</em></strong> *Garnet-Going-To-Compile*</li>
       	          <li>... launch-process-p ...</li>
       	          <li>... update-locking-p ...</li>
       	          <li><strong>FIXME: DOCUMENT AND INDEX ALL &quot;PROPERTY VARIBLES&quot; USED BY GARNET, AS AFFECTING COMPILATION AND/OR LOADING, FOR THOSE VARIABLS DEFINED IN THIS BUILD FILE</strong></li>
       	          <li>multipile-garnet-bin-dirs</li>
       	          <li>your-garnet-pathname</li>
       	          <li>many variables for pathnames
       	            <ul>
       	              <li>FIXME: USE LOGICAL PATHNAMES INSTEAD, WITHING GARNET</li>
   	                </ul>
       	          </li>
       	          <li><strong>LOADER-FILES + VARIABLES (FIXME: REDO EACH FOR ASDF)</strong> </li>
       	          <li>Garnet-Load-Alist</li>
       	          <li>when load-clx-p, on SBCL also loads SB-POSIX</li>
       	          <li>FIXME: MOVE INTO NEW GARNET-SHARED SYSTEM, IF USED ELSEWHERE IN GARNET:
       	            <ul>
       	              <li><del>DEFUN GET-FULL-DISPLAY-NAME</del>
       	                <ul>
       	                  <li>Used only in <em>VERIFY-DISPLAY-CAN-BE-OPENED</em></li>
       	                  <li>Redefined in src/gem/x.lisp</li>
   	                    </ul>
       	              </li>
       	              <li><del>DEFUN GET-DISPLAY-NUMBER</del>
       	                <ul>
       	                  <li>Used only in <em>VERIFY-DISPLAY-CAN-BE-OPENED</em></li>
       	                  <li>Redefined in src/gem/x.lisp</li>
   	                    </ul>
       	              </li>
       	              <li><del>DEFUN <em>VERIFY-DISPLAY-CAN-BE-OPENED</em></del>
       	                <ul>
       	                  <li><strong>Used oinly in garnet-loader.lisp</strong></li>
       	                  <li>For ASDF integration: May be moved into the 'gem' system, performed in an 'after' method on the same</li>
   	                    </ul>
       	              </li>
       	              <li><del>DEFUN GARNET-SHELL-EXEC</del>
       	                <ul>
       	                  <li>only used by <del>GARNET-COPY-FILES</del></li>
   	                    </ul>
       	              </li>
       	              <li><del>GARNET-COPY-FILES</del>
       	                <ul>
       	                  <li>USES SHELL 'cp'</li>
       	                  <li>Used only in &lt;foo&gt;/&lt;foo&gt;-compiler.lisp</li>
   	                    </ul>
       	              </li>
       	              <li>ALSO (?)
       	                <ul>
       	                  <li><del>DEFUN GARNET-MKDIR-IF-NEEDED</del>
       	                    <ul>
       	                      <li>Used only in &lt;foo&gt;/&lt;foo&gt;-compiler.lisp</li>
   	                        </ul>
       	                  </li>
       	                  <li><strong>DEFVAR *COMPILER-EXTENSION*</strong>
       	                    <ul>
       	                      <li>Unused outside of garnet-loader.lisp</li>
       	                      <li><strong>Mentioned in the Garnet manual</strong></li>
   	                        </ul>
       	                  </li>
       	                  <li><strong>DEFUN GARNET-LOAD</strong>
       	                    <ul>
       	                      <li><strong>Mentioned in the Garnet manual</strong></li>
       	                      <li>Used elsewhere in codebase</li>
       	                      <li>Used with logical pathnames (or in CMUCL: search paths)</li>
       	                      <li><strong>Serves as a simplefocus for further integration of Garnet with ASDF</strong>
       	                        <ul>
       	                          <li><strong>src/sample-prog/demo-editor.lisp</strong></li>
       	                          <li><strong>various under src/gadgets/garnet-code/</strong></li>
       	                          <li><strong>various under src/opal/garnet-code/</strong></li>
   	                            </ul>
       	                      </li>
   	                        </ul>
       	                  </li>
       	                  <li>DEFUN GARNET-COMPILE
       	                    <ul>
       	                      <li><strong>Mentioned in the Garnet manual</strong></li>
       	                      <li>Used only within &lt;foo&gt;/&lt;foo&gt;-compiler.lisp</li>
   	                        </ul>
       	                  </li>
       	                  <li>DEFUN ADD-GARNET-LOAD-PREFIX
       	                    <ul>
       	                      <li><strong>Mentioned in the Garnet manual</strong></li>
       	                      <li>Used only in garnet-loader.lisp</li>
       	                      <li>Note: Uses of garnet load prefix???</li>
   	                        </ul>
       	                  </li>
   	                    </ul>
       	              </li>
   	                </ul>
       	          </li>
       	          <li><strong><u>*kr-only*</u></strong></li>
       	          <li>and then it loads individual &lt;foo&gt;-loader files, depending on values of individual load-&lt;foo&gt;-p variables
       	            <ul>
       	              <li>NOTE: :GARNET-MODULES symbol accessed for its symbol plist, to determine if a garnet module is loaded (alternate approach to using *features*? Redundant if using ASDF. FIXME so remove it in the ASDF build)</li>
   	                </ul>
       	          </li>
   	            </ul>
       	      </li>
       	      <li>original <em>garnet-compiler.lisp</em>
       	        <ul>
       	          <li>which does a simple pre-check on the &lt;copy&gt; variables, then loads the individual compiler script for each beloved system
       	            <ul>
       	              <li>FIXME: Each of those compiler scripts must be amended for the ASDF loading process.</li>
   	                </ul>
       	          </li>
   	            </ul>
       	      </li>
   	        </ul>
       	  </li>
   	    </ul>
      </li>
      <li>mmgarnet branch: using GNU Make, with command
        <ul>
          <li>'make' command varies according to the Lisp being used for the build</li>
          <li>Makefile uses original 'build.lisp'
            <ul>
              <li>'build.lisp' does not save a Lisp image
                <ul>
                  <li>does compile, load.</li>
                </ul>
              </li>
              <li>Note: 'build.lisp' is available in original garnetlisp branch, though it is not used by the build-lisp script</li>
              <li>see source code. .... run source code, run! ...          </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <ul>
      <li><em><strong>TO DO: Using ASDF</strong></em>
        <ul>
          <li>{kindly add boilerplate explaining motivations to going through all of the gregariously tedious mucketymuck for this}
            <ul>
              <li>Mitigates application of variables for specifying compile-time/load-time behaviors in Garnet</li>
              <li>Allws for easier integration with development tools using ASDF</li>
              <li>ASDF's object-oriented system definition model allows for <em>extensibility</em> with regards to existing system definitions
                <ul>
                  <li>&quot;New ways&quot; to publish accessible documentation (TBD)</li>
                  <li>Integration with functional testing frameworks (TBD)</li>
                  <li>Other ways to add layers of &quot;High-Pro Glow&quot; to the resources
                    <ul>
                      <li>ASDF for sending system definitons to Mars ... and back.</li>
                      <li>...</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li>{list the beloved systems then defined for loading with ASDF}</li>
          <li>{note the historic timeline of each of Mk:Defsystem and ASDF)</li>
          <li>Current work: <code><a href="https://github.com/MetaCommunity/garnet/blob/garnetlisp/asdf-systems-gen.lisp">asdf-system-gen.lisp</a></code></li>
        </ul>
      </li>
    </ul>
    <p>&nbsp;</p>
    <p>(see also: {insert-remote-url}/readme-build-garnet.txt) </p>
    
    <blockquote class="ednote endnote">
    <h3>Concerns Encountered during Build</h3>
    <ul>
    <li>Various (denoted in previous) (low priority)</li>
    <li><em><strong>Very, very many (ad infinitum)  </strong></em>instances of the following warning appear on the terminal, 
      <ul>
        <li>"WARNING: Font '*-*-courier-medium-r-*-*-*-120-*-*-*-*-iso8859-1' not on font path! // ****   Resorting to Default Font!"</li>
        <li>...when loading <code>scrolling-menu</code> (FASL)
          <ul>
            <li>....when loading <code>gadgets-src:gadgets-compiler</code>
              <ul>
                <li>...when loading <code>garnet-compiler.lisp</code></li>
                </ul>
            </li>
          </ul>
        </li>
        <li>... probably indicating a loop in the program</li>
        <li>See also:
          <ul>
            <li><code>(opal:get-standard-font :serif :roman :large)</code>
              <ul>
                <li>Lisp form at line nr. 406 in file <code>gadgets-src:scrolling-menu.lisp</code></li>
                <li>The inifite loop may be a result of something using that font value?</li>
              </ul>
            </li>
          </ul>
        </li>
        <li>Workaround (?) In implementation RC file: 
          <ul>
            <li><code>(defvar compile-aggregadgets-p nil)</code></li>
            </ul>
        </li>
        <li>This was when using an up-to-date portable-clx (sharplispers CLX fork)  (?)
          <ul>
            <li>Alternately: Try using an implementation-specific CLX?</li>
            </ul>
        </li>
        <li>...using: SBCL 1.2.1.4-e8af16d
          <ul>
            <li>Will try a newer SBCL build (tag 1.2.3)</li>
            <li>...and still the same results.</li>
            </ul>
        </li>
        <li>Further study may continue after Garnet legacy compiler/loader files would be all converted into ASDF system definitions    </li>
      </ul>
    </li>
    </ul>
    </blockquote>
    
    <h2>Documenting Garnet</h2>
    <ul>
    	<li>Existing manuals (TeX, Postscript) (FIXME: Convert to PDF and publish)</li>
        <li>Further documentation (e.g. variables affecting compile) for QUICK REFERENCE. for EASY START UP AND BUILD/DEVELOP</li>
    </ul>
<h2>Evaluating Garnet for Application in Contemporary GUI Applications</h2>
<p><em>???</em></p>
<p>P.S. What means &quot;Contemporary&quot;, in any formal model of human computer interfaces? HTML + AJAX???</p>
<h2>"Looking Ahead" &mdash; Across The moment of, "No, this is not going to be a nice time after all"</h2>
    
<ul>
    	<li>Appliations of KR</li>
  <li><strong><u>Developing a   <code>PROTOTYPE</code> model in CLOS, referencing KR</u></strong>
    <ul>
  <li>Protocol:
          <ul>
            <li>Class: <code>PROTOTYPE</code></li>
            <li>Class: <code>PROTOTYPE-SLOT-DEFINITION</code></li>
            <li>Protocol behavior: <code>MAKE-INSTANCE (FOO PROTOTYPE-CLASS)</code> to call <code>ENSURE-CLASS FOO</code> and return the resulting <code>PROTOTYPE</code></li>
            <li>Concept (Extensional/Rhetorical) : <em>Collapsing the CLOS class/instance model into a single prototype model</em></li>
            <li>Relatd protocol: CLOS model for KR formulas (TBD)</li>
      </ul></li>
          <li>KR in CLOS + Garnet?  (<em>Usage case</em> for  <code>PROTOTYPE</code> model in CLOS)</li>
</ul>
        </li>
        <li>Thread safety and KR formulas</li>
        <li>&quot;How to make it run more efficiently&quot; </li>
        <li>Applicability on thin/mobile client architectures?</li>
  </ul>

  </div><!-- .content -->
  
  <div id="bibliography">
    <h2>Additional Bibliography</h2>
    <table>
      <tr class="biblioentry">
        <td class="biblioid"><a name="bib.{BIBID}">{BIBID}</a></td>
        <td class="biblioinfo">{AUTHORS}. <em>{TITLE}</em>. {EDITION}. {PUBLISHER} ({CITY}). {YEAR} </td>
        <td class="bibliorefs"><strong>References</strong>
          <ul>
            <li><a href="#bibfef.{BIBID}.1">1</a></li>
          </ul></td>
      </tr>
    </table>
</div><!-- .bibliography --> 

</div><!-- .article -->

<div class="footer">
  <p>(C) 2014. {RIGHS_HOLDER}</p>
</div><!-- .footer -->
</body>
</html>
