<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Towards a Set of Usage Examples for Garnet KR // Genizee Project Journal</title>
<link href="article.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div class="article">

  <div class="metadata">
    <h1 class="title">Towards a Set of Usage Examples for Garnet KR</h1>
    <div class="author">Sean Champ</div>
    <div class="pubdate">15 September, 2014</div>
    <div class="revision">Revision 1.3</div>
  </div><!-- .metadata -->

  <div class="toc">
  	<h2>Table of Contents</h2>
    <ul>
    	<li><a href="#kr-ov">A Brief Overview of KR</a></li>
    	<li><a href="#uex">Usage Examples</a></li>
    	<li><a href="#devenv">Outline of a Desktop Development Environment</a></li>
    	<li><a href="#tses">Procedure for a "Test Session," in Numbered Steps</a></li>
    	<li><a href="#bibliography">Bibliography</a></li>
    </ul>
    </div>

  <div class="content">
    <p></p>

    <h2 id="kr-ov">A Brief Overview of KR</h2>

    <ul>
    <li>KR Formulas</li>
    <li>Symbol-value propagation</li>
    </ul>

    <ul>
    <li>An object system in CLtL2, alternate to CLOS</li>
    <li>KR's Prototype-Instance Model</li>
    </ul>

        <ul>
    <li>KR is a Component of the Garnet toolkit, and may be used as a stand-alone object system</li>
    </ul>

<h2 id="uex">Usage Examples</h2>
    <h3>Applications in Geometry</h3>
    <ul>
      <li><strong>Pythagorean Theorem</strong>
        <ul>
          <li><strong><em>Trivial Demonstration:</em></strong> Lengths of sides of a right triangle: Given a right triangle with hypotenuse of length <em>c</em>, rectilinear sides of lenghs <em>a</em> and <em>b, </em>ensure that a KR <em>schema</em> is defined such that with any sequential change to each of <em>a</em>, <em>b</em>, or <em>c, </em>the change will be reflected in the other variables, per the calculation of the Pythagorean Theorem.      </li>
        </ul>
      </li>
      <li><strong>Relations among Trigonometric Functions</strong>
<ul>
          <li><strong><em>Trivial Demonstration</em></strong>
            <ul>
              <li><strong><em>Part 1:</em></strong> Relations of &quot;Baseline&quot; trigonometric functions, i.e. <em>sine</em>, <em>cosine</em>, and <em>tangent</em></li>
              <li><em><strong>Part 2:</strong> </em>Addition of further geometric constraints, as per <em>Law of Sines</em></li>
            </ul>
          </li>
          <li><strong><em>Demonstration onto Inverse Trigonometric Functions:</em></strong> Relations of <em>inverse trigonometric functions</em>, i.e <em>arcsine</em>, <em>arccosine</em>, and <em>arctangent </em>within the set of those three trignometric functions, and furthermore in relations towards the &quot;Baseline&quot; trigonometric functions.</li>
          <li><strong><em>Demonstration onto Hyperbolic Trigonometric Functions:</em></strong> Relations of <em>hyperbolic trigonometric functions</em>, with regards to other <em>trigonometric functions</em>, exponents of <em>Euler's constant</em>, and conversely, the <em>natural logarithm</em></li>
        </ul>
      </li>
      <li><strong>&quot;Blue Sky&quot; Demonsration: </strong> Polar Graphs of Functional Relations
        <ul>
          <li><em><strong>Trivial Example:</strong></em> Graph of a trigonometric function <em>r = f(&theta;)</em> on a polar coordinate plane, for reach of  <em>sin(</em><em>&theta;</em>), <em>cos(</em><em>&theta;</em>), <em>tan(&theta;</em>), observing a conventional methodology for denoting when <em>r = undefined</em></li>
        <li><em><strong>Non-Trivial Example:</strong></em> Graph of a periodic waveform, with <em>&theta;</em> = angular momentum <em>(&omega;), r =</em> <em>t</em></li></ul>
      </li>
    <li><strong>Relation of Natural Logarithmic Function to Exponents of Euler's Constant</strong></li></ul>
    <h3>Applications in Electrical Science - &quot;KR and Beyond&quot;</h3>
    <ul>
    <li><strong>Ohm's Law</strong>
<ul>
  <li>Instantaneous relation of electrical current, voltage, and resistance</li>
    </ul>
    </li>
    <li>Calculation of Qualities of <strong>Equivalent Resistance, Capacitance, and Inductance</strong>, in series and parallel circuits
<ul>
        <li>Six individual applicaitons of two distinct forumlae
          <ul>
            <li> simple <em>sum</em> </li>
            <li><em>inverse of sum of inverses</em></li>
          </ul>
        </li>
        <li>Programmatic, block-level analysis for reduction  of series and parallel values to equivalent values (ESR, etc)
          <ul>
            <li>Iterative applications using the bionmial &quot;product over sum&quot; formula, as appropriate to the nature of the electrical quality being reduced (e.g. parallel electrical resistance) across a circuit's block diagram</li>
            <li><em>Sidebar:</em> Tail recursion optimiztion in Common Lisp implementations</li>
          </ul>
        </li>
        </ul>
    </li>
    <li><strong>Phase Diagrams
      </strong>
      <ul>
        <li>Phase differential as illustrated in graph of periodic current or voltage, onto Cartesian coordinate plane</li>
        <li>Phase differential as illustrated instantaneously of a vector sum in </li>
        calculation of electrical reactance or impedance
        <li>Block-level analysis of phase differentials</li>
        </ul>
    </li>
    <li><strong>Resonance Analysis for AC Circuits</strong>
<ul>
  <li>Calculation of resonance frequency for RLC circuit
          <ul>
            <li>Verify with functional tests</li>
          </ul>
        </li>
        <li>Calculation of appropriate series and/or parallel <em>inductance</em> and <em>capacitance</em>, in circuit design, so as to ensure <em>resonance</em> of contrasting phase angles between <em>inductive reactance</em> and <em>capacitive reactance</em> in an RLC circuit (series and/or parallel)
          <ul>
            <li>Verify with resonsnace frequency calculation</li></ul>
        </li>
      </ul>
    </li>
    <li><strong>Timing Analysis</strong>
<ul>
  <li><em>Time constant</em> in AC circuits</li>
      </ul>
    </li>
    <li><strong>Digital Circuit Modeling</strong>
<ul>
  <li>Data-flow modeling for logical and functional behaviors of integrated circuits</li>
  <li>Digital timing analysis (block level)</li>
      </ul>
    </li>
    </ul>
    <p>
      <em><strong>Recommended reading:</strong></em> 
      <a href="#bib.Nahvi2014" name="bibref.Nahvi2014.1">Nahvi2014</a>, 
      <a href="#bib.Spiegel1972" name="bibref.Spiegel1972.1">Spiegel1971</a>, 
      <a href="#bib.Lipschutz1959" name="bibref.Lipschutz1959.1">Lipschutz1959</a>, and 
      <a href="#bib.Ayres2013" name="bibref.Ayres2013.1">Ayres2013</a>
</p>

    <h2 id="devenv">Outline of a Desktop Development Environment</h2>

        <p>This outline proposes a model for <span class="productname">CLX</span> development on a <span class="productname">Microsoft Windows</span> platform. In the model described herein, <span class="productname">VirtualBox</span> is applied in developing a <em class="glossterm">virtualized</em> <span class="productname">Linux</span> operating system within a <span class="productname">VirtualBox</span> <em class="glossterm">Virtual Appliance</em>. That <em>Virtual Appliance</em> may be accessed directly via <span class="productname">VirtualBox</span>' desktop integration, or alternately, via an <span class="productname">SSH</span> tunnel over a <span class="productname">VirtualBox</span> networking interface. </p>
        <p>Using <span class="productname">SSH</span> tunneling, with the <span class="productname">Xming</span> <em class="glossterm">server</em> installed on a <span class="productname">Microsoft Windows</span> desktop &mdash; that, serving as the <span class="glossterm">host <abbr>OS</abbr></span> to the <span class="glossterm">virtual appliance</span>  &mdash; then any <span class="productname">X Window System</span> <span class="glossterm">client</span> applications installed on the <span class="glossterm">guest OS</span> may be accessed &mdash; as though <em>remotely</em> &mdash; via the <span class="productname">X Window System</span> <span class="glossterm">client-server protocols</span>, from within the <span class="productname">X Window System</span> <em class="glossterm">server</em>, on the <span class="glossterm">host <abbr>OS</abbr></span>. </p>
        <p>Furthermore, with a configuration such as denoted herein, the <span class="productname">Linux</span> <span class="glossterm">guest OS</span> may be configured so as to <em>boot</em> to a <em>runlevel</em>, such that an <span class="productname">X Window System</span> <span class="glossterm">display manager</span> would not be initialized during the system boot process &mdash; therefore, not expending machine resources on a service unused, in such a configuration. Whether with or without an <span class="productname">X Window System</span> <span class="glossterm">display manager</span>, however, this configuration would allow for remote <span class="productname">X Window System</span> access via<span class="productname"> SSH. </span>Using <span class="productname">SSH</span> tunneling, this configuration would allow for runnning any <span class="productname">X Window System</span> <span class="glossterm">client processes</span> on the <span class="glossterm">guest OS</span>, from whithin the <span class="productname">X Window System</span> <span class="glossterm">server</span> on the <span class="glossterm">host <abbr>OS</abbr></span> to the <span class="glossterm">virtual appliance</span>. The <span class="glossterm">guest OS, </span> in this configuration, would be available via a a <span class="productname">VirtualBox</span> networking interface.</p>


    <ul>
          <li><span class="productname">VirtualBox</span>
        <ul>
                  <li>Virtual Appliance Guest OS: Kubuntu (Ubuntu 14.04)
                    <ul>
                      <li>VirtualBox Guest Additions are installed on Guest OS</li>
                      <li>OpenSSH server is installed on guest OS</li>
                  <li>SBCL is installed on guest OS</li>
                  <li>Orthogonal to this configuration: X.org is installed on guest OS</li>
                    </ul>
                  </li>
                <li>Virtual Appliance Host OS: Microsoft Windows 8.1
                  <ul>
                    <li>VirtualBox network adapter type, installed in host OS for accessing Guest via network: <em>NAT</em></li>
                    <li>Port forwarding configured on Host OS
                      <ul>
                        <li>Host OS IP address observed for NAT adapter: 192.168.50.1
                          <ul>
                            <li>Using this IP address as the &quot;Host IP&quot; address for the port forwarding configuration</li>
                            <li>IP address was determined via Microsoft Windows &quot;Network and Sharing Center&quot;</li>
                              </ul>
                        </li>
                        <li>Port forwarding &quot;Host port&quot; (arbitrary) 2222</li>
                        <li>Port forwarding &quot;Guest port&quot; 22
                          <ul>
                            <li>SSH</li>
                            <li>&quot;Guest IP&quot; address is not required in this configuration</li>
                              </ul>
                        </li>
                          </ul>
                    </li>
                      </ul>
                </li>
        </ul>
          </li>
          <li><span class="productname">Xming</span>
            <ul>
              <li>X Server for Windows</li>
              <li>Embedded support for SSH port forwarding, integrating with Putty or Xming's fork, Portable Putty</li>
              <li>Utility item: XLaunch file for launching Dolphin
                <ul>
                  <li>XLaunch file created with &quot;-P 2222&quot; as additional args to PuTTY</li>
                  <li> launches Dolphin client on remote, with display on local Xming server</li>
                  <li> Dolphin can be used to launch terminal</li>
            </ul>
              </li>
        </ul>
          </li>
          <li><span class="productname">Common Lisp</span> Development Environment
            <ul>
                  <li>SBCL on guest OS
                    <ul>
                      <li>CLX/Portable CLX</li>
                      <li>Garnet</li>
                </ul>
                  </li>
                  <li>Utility item: SBCL on host OS</li>
                  <li>A rationale in selecting SBCL, in short summary: &quot;Because debugger&quot;</li>
                  <li>Possible concerns with regards to SBCL's thread interrupts model?</li>
            </ul>
          </li>
    </ul>
    <h2 id="tses">Procedure for a &quot;Test Session,&quot; in Numbered Steps</h2>
        <p>The goal of this test session shall be to ensure that the the items of "Stuff", as denoted in the previous, are successfully installed and configured.</p>


 <blockquote class="sidebar ednote">

<p><em>Ed. Note:</em> The reader might observe that this test utilizes Xming and CLX, exclusively for the purpose of running Garnet, in this single "Test Session". The author does not wish to discourage development with Garnet, though this article shall focus on KR. </p>
<p>The configuration developed in this article may be of use, more broadly, in developing with CLX.</p>
 </blockquote>

    <ol>
        <li>"Install stuff" (Host OS and Guest OS)</li>
        <li>"Configure stuff" (Host OS and Guest OS)</li>
        <li>Download Garnet (Guest OS)</li>
        <li>After same &quot;Stuff&quot; items have been successfully installed and configured, then using Xming (host OS), launch a terminal emulator (client on Guest OS) and in that terminal emulator, run SBCL</li>
        <li>In that SBCL session, load Garnet</li>
        <li>In that SBCL session, then run a Garnet demo</li>
        <li>Garnet demo should display successfully on Host OS, via Xming as the X Window Server</li>
        <li>That would complete the &quot;Test session&quot;</li>
        <li>Subsequent tasks would include: <ul>
        <li>To extend KR for any one or more of the usage examples denoted in the previous  </li>
        <li>To develop an implementation of such a formual object/constaint propogation model as is implemented in KR, but extending on CLOS' class/instance model &mdash; contrasted to the prototype/instance model developed in KR</li>
        </ul></li>
    </ol>


<blockquote class="endnote">
 <h2>Sidebar: A Short Study of NoMachine</h2>
      <p>During the development of this article, the <a href="http://www.nomachine.com/">NoMachine</a> remote desktop framework was studied briefly, namely for a purpose of determining &mdash; albeit, in some arbitary regards&mdash; whether NoMachine would be used as an element in the development environment denoted in this article. .</p>
            <ul>
              <li><em><strong>See also:</strong></em> <a href="http://en.wikipedia.org.advanc.io/wiki/NX_technology">NX protocol</a>, as derived from <a href="http://www.vigor.nu/dxpc/">DXCP</a></li>
              <li><strong><em>Sidebar: </em></strong><em>Desktop remoting</em> protocols supported in NoMachine
                <ul>
                  <li>NX</li>
                  <li>Others?</li>
                </ul>
              </li>
              <li><em><strong>Na&iuml;ve Question: </strong></em>May NoMacine provide an alternative to Xming, in this development environment?
<ul>
            <li><em><strong>Goal sought:</strong></em> Optimized desktop GUI performance in communication between <em class="glossterm">guest OS</em> and <em class="glossterm">host OS</em></li>
            </ul>
          </li>
              <li><strong><em>Framework Property: </em></strong>NoMachine installed on <em>guest OS </em>
                <ul>
            <li>The NX service binds, by default, to TCP port 4000</li>
                  <li>NoMachine installation would have created a configuration for integrating with CUPS printer sharing, if CUPS was installed on the guest OS when NoMachine was installed on the guest OS</li>
                  <li>Installed shell commands include:
                    <ul>
                  <li><code class="command">nxnode (4.2.27)</code></li>
                      <li><code class="command">nxplayer (4.2.27)</code></li>
                      <li><code class="command">nxexec</code></li>
                      <li><code class="command">nxprint</code></li>
                      <li><code class="command">nxfsm</code></li>
              </ul></li>
                  <li>See also: <code class="filename">/usr/NX/etc/node.cfg</code></li>
            </ul></li>
              <li><strong><em>Framework Property:</em></strong> NoMachine installed on <em>host OS</em>
<ul>
            <li>Installation requires reboot</li>
                  <li>Configuration with VirtualBox network, as denoted above, requires an additional port forwarding assignment, e.g using &quot;Guest port&quot; 4000, &quot;Host port&quot; (arbitrary) 4040, other parameters the same.
</li>
                  <li>NoMachine on the Host OS, in a connection to the NX service on the Guest OS, display a full screen interface to the host OS, under the user of login on the host OS -- even insofar as displaying the KDM login screen (RDP??)</li>
                  <li>Protocols not thoroughly documented</li>
                  <li>Possibly applicable in the development environment as an alternative to using RDP for login to the VirtualBox guest OS</li>
                  <li>NoMachine finds applications throughout enterprise networks</li>
                </ul>
              </li>
              <li> NoMachine is also available for the Android and  iOS tablet platforms</li>
              <li>See also:
                <ul>
                  <li><a href="https://www.nomachine.com/getting-started-with-nomachine"><em>Getting Started with NoMachine</em></a></li>
                  <li><em><a href="./https://www.nomachine.com/documents?keys=&amp;type%5Bdocuments_type%5D=documents_type&amp;articleName=&amp;form_build_id=form-fd809ad405b331a58e981b86587a1afe&amp;field_appliesto_value_many_to_one=All&amp;custom_filter=any&amp;documentName=">Documentation</a></em><a href="./https://www.nomachine.com/documents?keys=&amp;type%5Bdocuments_type%5D=documents_type&amp;articleName=&amp;form_build_id=form-fd809ad405b331a58e981b86587a1afe&amp;field_appliesto_value_many_to_one=All&amp;custom_filter=any&amp;documentName="> in the NoMachine <em>Knowledge Base</em></a></li>
                  <li><em><a href="https://www.nomachine.com/version-3">Legacy NoMachine Version 3 Software</a></em></li>
                  <li><em><a href="https://www.nomachine.com/AR01C00142">How can I Get Involved in NX Development</a>?</em></li>
                  <li><a href="https://www.nomachine.com/opensource">NoMachine Open Source Software</a> components
<ul>
                      <li>...focusing primarily on <em>nxcodec</em>
                        <ul>
                          <li>towards FFI + CCL ETC</li>
                          <li><em>with or without documentation</em></li>
                    </ul>
                      </li>
                      <li>observe &quot;MinGW64-i686&quot; </li>
                      <li>direct download (not SCCM)</li>
                      <li>current NoMachine version is 4.2.27</li>
                </ul>
                  </li>
            </ul>
              </li>
      </ul>


</blockquote>

  </div><!-- .content -->

  <div id="bibliography">
    <h2>Bibliography</h2>
    <table>*

      <tr class="biblioentry">
        <td width="22%" class="biblioid"><a name="bib.Nahvi2014">Nahvi2014</a></td>
        <td width="60%" class="biblioinfo">Nahvi, Mahmood and Joseph A. Edminister. <em>Schaum's Outline of Electric Circuits</em>. 6th edition. McGraw-Hill (New York). 2014
        </td>
        <td width="18%" class="bibliorefs">
          <div><strong>References</strong></div>
          <ul>
            <li><a href="#bibref.Nahvi2014.1">1</a></li>
          </ul>
        </td>
      </tr>

      <tr class="biblioentry">
        <td class="biblioid"><a name="bib.Spiegel1972">Spiegel1971</a></td>
        <td class="biblioinfo">Spiegel, Murray R..<em>Schaum's Outline of Advanced Mathematics for Engineers and Scientists</em>. McGraw-Hill (New York). 1971</td>
        <td class="bibliorefs"><strong>References</strong>
          <ul>
            <li><a href="#bibref.Spiegel1972.1">1</a></li>
          </ul></td>
      </tr>
       <tr class="biblioentry">
        <td class="biblioid"><a name="bib.Lipschutz1959">Lipschutz1959</a></td>
        <td class="biblioinfo">Lipschutz, Seymor, Dennis Spellman, and Murray R. Spiegel. <em>Schaum's Outline of Vector Analysis</em>. 2nd edition. McGraw-Hill (New York). 2009</td>
        <td class="bibliorefs"><strong>References</strong>
          <ul>
            <li><a href="#bibref.Lipschutz1959.1">1</a></li>
          </ul></td>
      </tr>
            <tr class="biblioentry">
        <td class="biblioid"><a name="bib.Ayres2013">Ayres2013</a></td>
        <td class="biblioinfo">Ayres, Frank and Elliott Mendelson. <em>Schaum's Outline of Calculus</em>. 6th edition. McGraw-Hill (New York). 2013</td>
        <td class="bibliorefs"><strong>References</strong>
          <ul>
            <li><a href="#bibref.Ayres2013.1">1</a></li>
          </ul></td>
      </tr>


<!-- also Schaum's outlines of:
1. Vector mathematics
2. Calculus (differential calculus and integral calculus)
-->

    </table>
  </div><!-- .bibliography -->
</div><!-- .article -->

<div class="footer">
  <p>&copy; 2014. Sean Champ</p>
</div><!-- .footer -->
</body>
</html>
