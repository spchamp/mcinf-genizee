<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Genizee Project &ndash; Overview // Genizee Project Journal</title>
	<link href="article.css" rel="stylesheet" type="text/css" />
	<link href="section.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div class="article">
  <div class="metadata">
    <h1 class="title">Genizee Project &ndash; Overview</h1>
    <div class="author">Sean Champ</div>
    <div class="pubdate">14 September, 2014</div>
    <div class="revision">Revision 1.0</div>
  </div><!-- .metadata -->

  <div class="content">
    <h2>Overview</h2>

    <p>In regards to domains of <em class="glossterm">basic mathematics</em> &mdash; such as algebra and trigonometry &mdash; and domains of <em class="glossterm">calculus</em> &mdash; such as the <em class="glossterm">differential calculus</em> and the <em class="glossterm">integral calculus</em> &mdash; broadly, one may find an application of a <em class="glossterm">mathematical system</em> &mdash; as would be defined within any one mathematical domain &mdash; of a mathematical system, an application within any number of practical and material models, developed of the <em class="glossterm">engineering sciences</em>. For instance, in domain of <em class="glossterm">electrical engineering</em> (<abbr>EE</abbr>), there are applications of mathematics in practices of circuit modeling, circuit analysis, and circuit simulation.</p>

    <p>The Common Lisp Programming Language, as standardized in the proceedings of the <abbr>ANSI</abbr> working group, <abbr>X.3J13</abbr>[CLHS] &mdash; colloquially, <abbr>CLtL2</abbr> &mdash; provides a comprehensive <em class="glossterm">type system</em>, including of <em class="glossterm">data types</em> defined onto <em class="glossterm">complex numbers</em> and <em class="glossterm">real numbers</em>, with further specialization of the <em class="glossterm">real number</em> <em class="glossterm">type</em> as partitioned, in <abbr>CLtL2</abbr>, into types of <em class="glossterm">floating point</em> <em class="glossterm">decimal</em> numbers, <em class="glossterm">integer</em> numbers, and a single <em class="glossterm">ratio</em> <em class="glossterm">numeric type</em>. The <abbr>CLtL2</abbr> <em class="glossterm">type system</em> is also defined with an integrated <em class="productname">Common Lisp Object System</em> (<abbr>CLOS</abbr>) in addition to a <em class="glossterm">structure type</em> <em class="glossterm">class model</em> and a <em class="glossterm">condition type</em> <em class="glossterm">class model</em>. This <em class="glossterm">type system</em> is furthermore accompanied with a procedural model allowing for definitions of <em class="glossterm">functions</em> as <em class="glossterm">objects</em> and extensionally, <em class="glossterm">function</em> <em class="glossterm">objects</em> providing <em class="glossterm">functions</em> as <em class="glossterm">interfaces</em> onto standard <abbr>CLOS</abbr> <em class="glossterm">functions</em> as <em class="glossterm">objects</em> <em class="glossterm">methods</em>.</p>
    <p>The official <abbr>CLtL2</abbr> <em class="glossterm">specification</em> is extended, furthermore, with <em class="glossterm">specifications</em> such that &mdash; although not formally adopted within <abbr>ANSI</abbr> <em class="productname">Common Lisp</em> (<abbr>CLtL2</abbr>) &mdash; may nonetheless find a normative adoption by <em class="productname">Common Lisp</em> developers, subsequently within <em class="productname">Common Lisp</em> implementations. Focusing on the informal specification of the <em class="productname">Metaobject Protocol</em> (<abbr>MOP</abbr>), though it is a specification not formally adopted within <abbr>ANSI</abbr> <em class="productname">Common Lisp</em>, nonetheless <abbr>MOP</abbr> finds a relevance in within implementations of <abbr>CLOS</abbr>, itself, and furthermore in extensions of <abbr>CLOS</abbr> and <abbr>MOP</abbr>, in <em class="productname">Common Lisp</em> applications.</p>

    <hr />

    <p>In order to define a normative <em class="glossterm">object system</em> for definitions of <em class="glossterm">mathematical formulae</em>, and a corresponding procedural model for applications of <em class="glossterm">mathematical formulae</em>, one may begin with a study of the rudimentary <em class="glossterm">syntax</em> and <em class="glossterm">semantics</em> of conventional mathematics &mdash; in a manner, beginning with definitions of <em class="glossterm">number systems</em> and the simple mathematical <em class="glossterm">operations</em> of addition and subtraction, and multiplication and division. Extending of such a rudimentary study, one may furthermore study of the <em class="glossterm">syntax</em> and <em class="glossterm">semantics</em> of essential algebra, trigonometry, integral calculus, and differential calculus, and linear algebra, if not of more esoteric <em class="glossterm">mathematical systems</em> such as of <em class="glossterm">mathematical topology</em>.  These abstract mathematics, however, may seem difficult to address towards a sense of practical relevance, if such study would not be accompanied with any adequately succinct illustrations of those mathematics' applications as towards the material sciences.</p>

    <hr />

    <p>In a practical manner, <abbr>CLOS</abbr> may be extended as to to develop an <em class="glossterm">object model</em> for <em class="glossterm">mathematical formulae</em>. The same <em class="glossterm">object model</em> may be accompanied, moreover, with a definition of a <em class="glossterm">human-computer interface</em> (<abbr>HCI</abbr>) model such as may, itself, extend of the <em class="productname">Common Lisp Interface Manager</em> (<abbr>CLIM</abbr>) specification and portable implementations of <abbr>CLIM</abbr>, as for purpose of graphical modeling of <em>mathematical objects</em>, including <em class="glossterm">mathematical formulae</em> and <em class="glossterm">graph</em> <em class="glossterm">diagrams</em>. Certainly, such an application &mdash; in much &mdash; may serve to illustrate the relevance of <abbr>CLIM</abbr>, and furthermore the relevance of <abbr>CLOS</abbr>, <abbr>MOP</abbr>, and <abbr>CLtL2</abbr> itself. Such an application, likewise, may serve to support a study of mathematics, as well as subsequent applications of mathematics, in domains of the material sciences and engineering.</p>
    <p>For such an application, if not an application framework to be developed towards any such practical utility &mdash;  as for applications in and of the physical sciences &mdash; such an application may seek to annotate its resources as being defined for application within specific domains of engineering &mdash; such as to accompany any formal or informal, though nonetheless guided studies of principles and practices developed and established in any single domain of engineering.</p>


    <blockquote class="sidebar ednote">
      <p><em>Ed. Note:</em> Candidly, in considering so many characteristics of the social environment beyond the context of this simple, na&iuml;ve project overview:  Any tasks as would be entailed, inevitably, of the definition of such an application framework, it may seem expressly daunting for the developers, to meet the inevitable demands of academia, if not moreover to meet such demands as may be imposed of so many individual details of individual requirements, in individual mathematical practice and personally. Insofar as this project may represent, simply, an effort towards if not within a domain of the design and implementation of information systems, then &mdash; whether or not it may seem to be in a dread humorless view &mdash; there are, at least, the bare, essential rudiments of the Common Lisp programming language as a software system, in itself &mdash; intensionally, a logical system developed after years of &quot;Best practice&quot;, later codified in the assembly of the ANSI X.3J13 working group, certainly as nothing too sensational in its original epoch.</p>

      <p>Insofar as any apparent intentions, if not expressed demands encountered within an academic environment may seem, simply, <em>beyond the pale</em>, then if one would feel mystified of such, but certainly the culture developed of any single academic environment would be &mdash; in its own regards &mdash; the culture of only a single academic environment. Hopefully, not all academic environments may be so confusingly obsessed of <em>ad hominem</em> manners or <em>activist</em> discourse, so much as the author of this article shall not comment to, in any further.</p>
    </blockquote>


    <hr />

    <p>Insofar as that the Clyde Portal of the MetaCommunity Project would be begun in its development cycle, the <abbr>CLtL2</abbr> application model henceforward denoted shall be adopted as a primary project of the Clyde Portal work area, within the MetaCommunity Project. The project henceforward denoted shall be named, colloquially, <em>Genizee</em> &mdash; the project's namesake, then, being a world of the Heritage Universe, a series of books with a distinctly profound narrative of engineering, in the variable scale of science fiction, as authored by Charles Sheffield.</p>
    <p>The Genizee Project, initially, shall develop resources within two engineering domain models, as may be addressed within the project's own limited range of coverage: Electoral Engineering (EE) and Engineering of Digital Information Systems (EDIS). The EE domain applications shall be developed, firstly, in a manner corresponding to the material addressed in academic studies by the project's initial founder, Sean Champ. The project may begin with a hasty model onto analysis of the behaviors of analog and digital circuits driven by periodic waveforms, focusing initially about analog circuits, and &mdash; more specifically &mdash; analog circuits utilizing <abbr>AC</abbr> power supplies, those producing of regular, sinusoidal waveforms, namely towards the mathematical and mechanical qualities of resistive, inductive, and capacitive elements of <abbr>AC</abbr> electrical circuits, if not moreover in functional models both of analog and digital circuitry. This work shall be accompanied with a formal extension of the Common Lisp Object System, an extension developed for application in mathematical vector calculations, together with an extension of CLIM for representation of polar coordinate systems, rectangular coordinate systems for complex numbers, and functions and graphing of periodic waveforms, primarily for analysis of voltage and current differentials within circuits functioning in periodic alternation of voltage and current.</p>
    <p>Furthermore, this project may endeavor to develop a structural model and a corresponding practical model of digital and analog circuit behaviors, in extending of features developed of the project's earlier development sprints, as well as momentary &quot;Side sprints&quot; such as for a definition of a complete XML Schema Datatypes implementation in Common Lisp, as well as to develop an implementation of the Metaobject Framework's meta-metamodel, the Unified Modeling Language's metamodel, and the Systems Modeling Language metamodel, the last of which coincides with some of the UML metamodel. Extending on that work, then, this project may endeavor to develop an extensible, functional baseline for definition of a modern microprocessor extending and revising of the original MIT CADR Lisp Machine &mdash; as was designed at the MIT Artificial Intelligence Laboratory, in and around the leading years of the decade of the 1980's, latterly with the design documents for MIT CADR having become available, formally, in the public domain &mdash; effectively, to extend of original MIT CADR design, in the design of the MIT CADR microprocessor and the corresponding microprogramming language for MIT CADR, then towards adapting MIT CADR for application of contemporary specifications in digital interfacing within computer systems, for instance the SO-DIMM RAM interface, the PCI and PCIe interfaces, the SATA and eSATA interfaces, and the USB protocols, editions one through three. Inasmuch as MIT CADR's design documents have become available within the public domain, normatively, this project should likewise endeavor to produce an &quot;Open Core&quot; design, in the same platform modernization.</p>
    <p>The foundation of the Genizee Project is supported, effectively, of the Living Expenses portion of the founder's student budget. Genizee being a project of essentially an academic characteristic, furthermore requiring of a portion of time for study and for application of such theories of electrical science as may be extended of, in the project, likewise extending of &mdash; if not, moreover, reinforcing of &mdash; a formal study in a domain of electrical engineering, the Genizee Project may or may not be extended of, for development of any formal academic thesis materials, such as &mdash; hypothetically &mdash; may address individual concepts and distinct software resources, such as may be developed of the Genizee Project, across the duration of the project's active development and/or in later study.</p>

    <blockquote class="endnote ednote">
      <p><em>Ed. Note:</em> Noted here as an item that I'd not been able to include any exact reference to, in that singular stream of text, there's also Granite's KR. Granite's KR could be of some distinct relevance, early in the project's development &mdash; as around the matter of developing a formal model for mathematical formulae. Of course, without my wishing to offend any of the Garnet developers, it's my preference that KR would be studied as an example towards a CLOS/MOP implementation namely of KR's formula/constraints model. Candidly, KR would be the primary, if not exclusive object of my own sense of attention, in my own considerations of KR as a software system.</p>
    </blockquote>

  </div><!-- .content -->

  <div id="bibliography">
    <h2>Bibliography</h2>
    <table>
      <tr class="biblioentry">
        <td class="biblioid"><a name="bib.CLHS" id="bib.CLHS">CLHS</a></td>
        <td class="biblioinfo">{AUTHORS}. <em>Common Lisp Hyperspec</em>. {EDITION}. {PUBLISHER} ({CITY}). {YEAR} </td>
        <td class="bibliorefs"><strong>References</strong>
          <ul>
            <li><a href="#bibfef.{BIBID}.1">1</a></li>
        </ul></td>
      </tr>
      <tr class="biblioentry">
        <td class="biblioid"><a name="bib.CLHS" id="bib.CLtL2">CLtL2</a></td>
        <td class="biblioinfo">{AUTHORS}. <em>Common Lisp the Language</em>. 2nd edn. {PUBLISHER} ({CITY}). {YEAR} </td>
        <td class="bibliorefs"><strong>References</strong>
          <ul>
            <li><a href="#bibfef.{BIBID}.1">1</a></li>
        </ul></td>
      </tr>
    </table>
  </div><!-- .bibliography -->
</div><!-- .article -->
<div class="footer">
  <p>(C) 2014. Sean Champ</p>
</div><!-- .footer -->
</body>
</html>

<!--  LocalWords:  Genizee EE CLHS CLtL CLOS extensionally Metaobject
 -->
<!--  LocalWords:  formulae HCI CLIM intensionally hominem EDIS UML
 -->
<!--  LocalWords:  MetaCommunity waveforms resistive capacitive CADR
 -->
<!--  LocalWords:  Datatypes metamodel microprogramming DIMM PCI PCIe
 -->
<!--  LocalWords:  SATA eSATA CADR's normatively KR's
 -->
